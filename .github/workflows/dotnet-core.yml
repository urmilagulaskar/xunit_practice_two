name: Create Release

on:
  push:
    branches: [ CreateRelease ]
    tags: 
      - "v*"
  pull_request:
    branches: [ CreateRelease ]

jobs:
  build:
    name: Create Release from code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        
      - name: Fetch all history for all tag and branches
        run: git fetch --prune
        
      - name: Install git version
        uses: gittools/actions/gitversion/setup@v0.9.2
        with:
         versionSpec: '5.2.x'
         
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values  
        uses: gittools/actions/gitversion/execute@v0.9.2
      - run: |
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
          echo "Sha: ${{ steps.gitversion.outputs.sha }}"
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      
      - run: echo "FullSemVer- ${{ steps.gitversion.outputs.fullSemVer }}"
        
# jobs:
#   build_test_version:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest]

#     steps:
#     - uses: actions/checkout@v1
    
#     - name: Fetch all history for all tag and branches
#       run: git fetch --prune 

      
#     - name: Setup .NET Core
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: 3.1.301
#     - run: |
#         dotnet --version
                       
#     - name: Install dependencies
#       run: dotnet restore
#     - name: Build
#       run: dotnet build --configuration Release --no-restore
#     - name: Test
#       run: dotnet test --no-restore --verbosity normal
    
#     - name: Install git version
#       uses: gittools/actions/gitversion/setup@v0.9.2
#       with:
#        versionSpec: '5.2.x'
    
#     - name: Use GitVersion
#       id: gitversion # step id used as reference for output values
#       uses: gittools/actions/gitversion/execute@v0.9.2
#     - run: |
#         echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
#         echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
#         echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
#         echo "Sha: ${{ steps.gitversion.outputs.sha }}"
